name: Build Runner Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: tedatech/github-auth-tooling

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from Dockerfile
        id: dockerfile-version
        run: |
          # Extract version from Dockerfile's FROM statement
          VERSION=$(grep -m 1 "^FROM ghcr.io/actions/actions-runner:" Dockerfile | sed -E 's/.*:([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          echo "Found version: $VERSION"
          echo "runner_version=$VERSION" >> "$GITHUB_OUTPUT"
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,prefix=${{ steps.dockerfile-version.outputs.runner_version }}-,value=latest
            type=ref,event=tag,prefix=${{ steps.dockerfile-version.outputs.runner_version }}-
            type=semver,prefix=${{ steps.dockerfile-version.outputs.runner_version }}-,pattern={{version}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max